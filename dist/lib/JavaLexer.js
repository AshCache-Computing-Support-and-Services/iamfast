var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var JavaLexer_exports = {};
__export(JavaLexer_exports, {
  default: () => JavaLexer
});
var import_antlr4 = __toESM(require("antlr4"), 1);
const serializedATN = [
  "\u608B\uA72A\u8133\uB9ED\u417C\u3BE7\u7786",
  "\u5964\x82\u045A\b		",
  "			\x07",
  "	\x07\b	\b			\n	\n\v	\v",
  "\f	\f\r	\r		",
  "				",
  "			",
  "				",
  "\x1B	\x1B		",
  '		 	 !	!"	"#',
  "	#$	$%	%&	&'	'(	()	)",
  "*	*+	+,	,-	-.	./	/0	0",
  "1	12	23	34	45	56	67	7",
  "8	89	9:	:;	;<	<=	=>	>",
  "?	?@	@A	AB	BC	CD	DE	E",
  "F	FG	GH	HI	IJ	JK	KL	L",
  "M	MN	NO	OP	PQ	QR	RS	S",
  "T	TU	UV	VW	WX	XY	YZ	Z",
  "[	[\\	\\]	]^	^_	_`	`a	a",
  "b	bc	cd	de	ef	fg	gh	h",
  "i	ij	jk	kl	lm	mn	no	o",
  "p	pq	qr	rs	st	tu	uv	v",
  "w	wx	xy	yz	z{	{|	|}	}",
  "~	~\x7F	\x7F\x80	\x80\x81	\x81",
  "\x82	\x82\x83	\x83\x84	\x84\x85	",
  "\x85\x86	\x86\x87	\x87\x88	\x88",
  "",
  "",
  "",
  "",
  "",
  "\x07",
  "\x07\x07\x07\x07\b\b\b",
  "\b\b\b					\n",
  "\n\n\n\n\n\v\v\v",
  "\v\v\v\f\f\f\f",
  "\f\f\f\f\f\r\r\r",
  "\r\r\r\r\r",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "\x1B\x1B\x1B",
  "\x1B\x1B\x1B\x1B\x1B\x1B",
  "\x1B\x1B",
  "",
  "",
  "",
  "  ",
  "  !!!!!!!!",
  '""""""""#',
  "#########$",
  "$$$$$$%%%%",
  "%%%&&&&&&'",
  "''''''(((",
  "(((((())))",
  "))*******+",
  "++++++++++",
  "++,,,,,---",
  "---.......",
  "//////////",
  "0000111112",
  "2222222233",
  "3333444444",
  "4555556666",
  "6666677777",
  "7778888889",
  "99:::::;;;",
  ";;;;;;<<<<",
  "<=========",
  "==>>>>????",
  "??@@@@@@@A",
  "AAAAAABBBB",
  "BBBBCCCCCC",
  "CCCCCDDDD\u02D7\nD",
  "DD\u02DA\nD\rDD\u02DBDD\u02DF\nDD\u02E1",
  "\nDDD\u02E4\nDEEEE\x07E\u02EA",
  "\nE\fEE\u02ED\vEEE\u02F0\nEEE\u02F3",
  "\nEFF\x07F\u02F7\nF\fFF\u02FA\vFF",
  "F\x07F\u02FE\nF\fFF\u0301\vFFF\u0304\nF",
  "FF\u0307\nFGGGG\x07G\u030D\nG\fG",
  "G\u0310\vGGG\u0313\nGGG\u0316\nGH",
  "HHH\u031B\nHHHH\u031F\nHH",
  "H\u0322\nHHH\u0325\nHHHHH",
  "\u032A\nHHH\u032D\nHH\u032F\nHII",
  "III\u0335\nIII\u0338\nIII",
  "I\u033C\nIIII\u0340\nIIII\u0344",
  "\nIJJJJJJJJJ",
  "J\u034F\nJKKKK\u0354\nKKK",
  "LLL\x07L\u035B\nL\fLL\u035E\vLL",
  "LMMMMM\x07M\u0367\nM\fMM\u036A",
  "\vMMMM\x07M\u036F\nM\fMM\u0372\vM",
  "MMMMNNNNN",
  "OOPPQQRRSS",
  "TTUUVVWWXX",
  "YYZZ[[\\\\]]",
  "^^___```aa",
  "abbbcccddd",
  "eeefffgghh",
  "iijjkkllmm",
  "nnooopppqq",
  "qrrrsssttt",
  "uuuvvvwwww",
  "xxxxyyyyyz",
  "zz{{{||}}}",
  "}~~\u03F7\n~\r~~\u03F8~~\x7F",
  "\x7F\x7F\x7F\x07\x7F\u0401\n\x7F\f\x7F",
  "\x7F\u0404\v\x7F\x7F\x7F\x7F\x7F",
  "\x7F\x80\x80\x80\x80\x07\x80",
  "\u040F\n\x80\f\x80\x80\u0412\v\x80\x80",
  "\x80\x81\x81\x07\x81\u0418\n\x81\f\x81",
  "\x81\u041B\v\x81\x82\x82\x82\u041F\n",
  "\x82\x82\x82\x83\x83\x83",
  "\x83\x83\u0427\n\x83\x83\x83\u042A\n\x83",
  "\x83\x83\x83\x83\u042F\n\x83\r\x83",
  "\x83\u0430\x83\x83\x83\x83",
  "\x83\x83\u0438\n\x83\x84\x84\x84",
  "\x07\x84\u043D\n\x84\f\x84\x84\u0440\v\x84",
  "\x84\x84\u0443\n\x84\x85\x85\x86",
  "\x86\x07\x86\u0449\n\x86\f\x86\x86\u044C\v",
  "\x86\x86\x86\u044F\n\x86\x87\x87",
  "\x87\u0453\n\x87\x88\x88\x88",
  "\x88\x88\u0459\n\x88\u0370\u0402\x89",
  "\x07	\v\x07\r\b	",
  "\n\v\f\r\x1B",
  "!#%')+-/1",
  `3\x1B579;= ?!A"C#E$G%I&K'M(O)Q*S+U,W-Y.`,
  "[/]0_1a2c3e4g5i6k7m8o9q:s;u<w=y>{?}@\x7FA\x81B\x83C\x85D\x87",
  "E\x89F\x8BG\x8DH\x8FI\x91J\x93K\x95L\x97M\x99N\x9B",
  "O\x9DP\x9FQ\xA1R\xA3S\xA5T\xA7U\xA9V\xABW\xADX\xAF",
  "Y\xB1Z\xB3[\xB5\\\xB7]\xB9^\xBB_\xBD`\xBFa\xC1b\xC3",
  "c\xC5d\xC7e\xC9f\xCBg\xCDh\xCFi\xD1j\xD3k\xD5l\xD7",
  "m\xD9n\xDBo\xDDp\xDFq\xE1r\xE3s\xE5t\xE7u\xE9v\xEB",
  "w\xEDx\xEFy\xF1z\xF3{\xF5|\xF7}\xF9~\xFB\x7F\xFD",
  "\x80\xFF\x81\u0101\x82\u0103\u0105\u0107\u0109",
  "\u010B\u010D\u010F",
  "3;NNnnZZzz2;CHch2;C",
  "Haach2929aaDDdd23",
  "23aaFFHHffhhRRrr--//",
  "\f\f))^^\f\f$$^^",
  '\v\v""\f\f\v\f',
  '""GGgg\n$$))^^ddhhppttvv25',
  "2;2;aa&&C\\aac|\x81",
  "\u{10801}\u{10801}\uDC02\uE001\u0486",
  "",
  "\x07	",
  "\v\r",
  "",
  "",
  "",
  "\x1B",
  "!",
  "#%",
  "')+",
  "-/",
  "13",
  "57",
  "9;",
  "=?A",
  "CE",
  "GI",
  "KM",
  "OQ",
  "SUW",
  "Y[",
  "]_",
  "ac",
  "eg",
  "ikm",
  "oq",
  "su",
  "wy",
  "{}",
  "\x7F\x81",
  "\x83\x85",
  "\x87\x89",
  "\x8B\x8D",
  "\x8F\x91",
  "\x93\x95",
  "\x97\x99",
  "\x9B\x9D",
  "\x9F\xA1",
  "\xA3\xA5",
  "\xA7\xA9",
  "\xAB\xAD",
  "\xAF\xB1",
  "\xB3\xB5",
  "\xB7\xB9",
  "\xBB\xBD",
  "\xBF\xC1",
  "\xC3\xC5",
  "\xC7\xC9",
  "\xCB\xCD",
  "\xCF\xD1",
  "\xD3\xD5",
  "\xD7\xD9",
  "\xDB\xDD",
  "\xDF\xE1",
  "\xE3\xE5",
  "\xE7\xE9",
  "\xEB\xED",
  "\xEF\xF1",
  "\xF3\xF5",
  "\xF7\xF9",
  "\xFB\xFD",
  "\xFF\u0101",
  "\u0111\u011A\x07",
  "\u0121	\u0129\v",
  "\u012F\r\u0134",
  "\u0139\u013F",
  "\u0144\u014A",
  "\u0150\u0159\x1B",
  "\u0161\u0164",
  "\u016B!\u0170#\u0175",
  "%\u017D'\u0183",
  ")\u018B+\u0191",
  "-\u0195/\u0198",
  "1\u019D3\u01A8",
  "5\u01AF7\u01BA9\u01BE",
  ";\u01C8=\u01CD",
  "?\u01D4A\u01D8",
  "C\u01E0E\u01E8",
  "G\u01F2I\u01F9",
  "K\u0200M\u0206O\u020D",
  "Q\u0216S\u021C",
  "U\u0223W\u0230",
  "Y\u0235[\u023B",
  "]\u0242_\u024C",
  "a\u0250c\u0255e\u025E",
  "g\u0264i\u026B",
  "k\u0270m\u0279",
  "o\u0281q\u0287",
  "s\u028Au\u028F",
  "w\u0298y\u029D{\u02A8",
  "}\u02AC\x7F\u02B2",
  "\x81\u02B9\x83\u02C0",
  "\x85\u02C8\x87\u02E0",
  "\x89\u02E5\x8B\u02F4",
  "\x8D\u0308\x8F\u032E",
  "\x91\u0330\x93\u034E",
  "\x95\u0350\x97\u0357",
  "\x99\u0361\x9B\u0377",
  "\x9D\u037C\x9F\u037E",
  "\xA1\u0380\xA3\u0382",
  "\xA5\u0384\xA7\u0386",
  "\xA9\u0388\xAB\u038A",
  "\xAD\u038C\xAF\u038E",
  "\xB1\u0390\xB3\u0392",
  "\xB5\u0394\xB7\u0396",
  "\xB9\u0398\xBB\u039A",
  "\xBD\u039C\xBF\u039F",
  "\xC1\u03A2\xC3\u03A5",
  "\xC5\u03A8\xC7\u03AB",
  "\xC9\u03AE\xCB\u03B1",
  "\xCD\u03B4\xCF\u03B6",
  "\xD1\u03B8\xD3\u03BA",
  "\xD5\u03BC\xD7\u03BE",
  "\xD9\u03C0\xDB\u03C2",
  "\xDD\u03C4\xDF\u03C7",
  "\xE1\u03CA\xE3\u03CD",
  "\xE5\u03D0\xE7\u03D3",
  "\xE9\u03D6\xEB\u03D9",
  "\xED\u03DC\xEF\u03E0",
  "\xF1\u03E4\xF3\u03E9",
  "\xF5\u03EC\xF7\u03EF",
  "\xF9\u03F1\xFB\u03F6",
  "\xFD\u03FC\xFF\u040A",
  "\u0101\u0415\u0103\u041C",
  "\u0105\u0437\u0107\u0439",
  "\u0109\u0444\u010B\u0446",
  "\u010D\u0452\u010F\u0458",
  "\u0111\u0112\x07c\u0112\u0113",
  "\x07d\u0113\u0114\x07u\u0114\u0115\x07",
  "v\u0115\u0116\x07t\u0116\u0117\x07c",
  "\u0117\u0118\x07e\u0118\u0119\x07v",
  "\u0119\u011A\u011B\x07c",
  "\u011B\u011C\x07u\u011C\u011D\x07u\u011D",
  "\u011E\x07g\u011E\u011F\x07t\u011F\u0120",
  "\x07v\u0120\u0121\u0122",
  "\x07d\u0122\u0123\x07q\u0123\u0124\x07",
  "q\u0124\u0125\x07n\u0125\u0126\x07g",
  "\u0126\u0127\x07c\u0127\u0128\x07p",
  "\u0128\b\u0129\u012A\x07d\u012A",
  "\u012B\x07t\u012B\u012C\x07g\u012C\u012D",
  "\x07c\u012D\u012E\x07m\u012E\n",
  "\u012F\u0130\x07d\u0130\u0131\x07{",
  "\u0131\u0132\x07v\u0132\u0133\x07g",
  "\u0133\f\u0134\u0135\x07e\u0135",
  "\u0136\x07c\u0136\u0137\x07u\u0137\u0138",
  "\x07g\u0138\u0139\u013A",
  "\x07e\u013A\u013B\x07c\u013B\u013C\x07",
  "v\u013C\u013D\x07e\u013D\u013E\x07j",
  "\u013E\u013F\u0140\x07e",
  "\u0140\u0141\x07j\u0141\u0142\x07c",
  "\u0142\u0143\x07t\u0143",
  "\u0144\u0145\x07e\u0145\u0146\x07n\u0146",
  "\u0147\x07c\u0147\u0148\x07u\u0148\u0149",
  "\x07u\u0149\u014A\u014B",
  "\x07e\u014B\u014C\x07q\u014C\u014D\x07",
  "p\u014D\u014E\x07u\u014E\u014F\x07v",
  "\u014F\u0150\u0151\x07e",
  "\u0151\u0152\x07q\u0152\u0153\x07p",
  "\u0153\u0154\x07v\u0154\u0155\x07k\u0155",
  "\u0156\x07p\u0156\u0157\x07w\u0157\u0158",
  "\x07g\u0158\u0159\u015A",
  "\x07f\u015A\u015B\x07g\u015B\u015C\x07",
  "h\u015C\u015D\x07c\u015D\u015E\x07w",
  "\u015E\u015F\x07n\u015F\u0160\x07v",
  "\u0160\u0161\u0162\x07f",
  "\u0162\u0163\x07q\u0163",
  "\u0164\u0165\x07f\u0165\u0166\x07q\u0166",
  "\u0167\x07w\u0167\u0168\x07d\u0168\u0169",
  "\x07n\u0169\u016A\x07g\u016A",
  "\u016B\u016C\x07g\u016C\u016D\x07",
  "n\u016D\u016E\x07u\u016E\u016F\x07g",
  "\u016F \u0170\u0171\x07g",
  "\u0171\u0172\x07p\u0172\u0173\x07w\u0173",
  '\u0174\x07o\u0174"\u0175\u0176',
  "\x07g\u0176\u0177\x07z\u0177\u0178\x07",
  "v\u0178\u0179\x07g\u0179\u017A\x07p",
  "\u017A\u017B\x07f\u017B\u017C\x07u",
  "\u017C$\u017D\u017E\x07h\u017E",
  "\u017F\x07k\u017F\u0180\x07p\u0180\u0181",
  "\x07c\u0181\u0182\x07n\u0182&",
  "\u0183\u0184\x07h\u0184\u0185\x07k",
  "\u0185\u0186\x07p\u0186\u0187\x07c",
  "\u0187\u0188\x07n\u0188\u0189\x07n\u0189",
  "\u018A\x07{\u018A(\u018B\u018C",
  "\x07h\u018C\u018D\x07n\u018D\u018E\x07",
  "q\u018E\u018F\x07c\u018F\u0190\x07v",
  "\u0190*\u0191\u0192\x07h",
  "\u0192\u0193\x07q\u0193\u0194\x07t\u0194",
  ",\u0195\u0196\x07k\u0196\u0197",
  "\x07h\u0197.\u0198\u0199\x07",
  "i\u0199\u019A\x07q\u019A\u019B\x07v",
  "\u019B\u019C\x07q\u019C0",
  "\u019D\u019E\x07k\u019E\u019F\x07o\u019F",
  "\u01A0\x07r\u01A0\u01A1\x07n\u01A1\u01A2",
  "\x07g\u01A2\u01A3\x07o\u01A3\u01A4\x07",
  "g\u01A4\u01A5\x07p\u01A5\u01A6\x07v",
  "\u01A6\u01A7\x07u\u01A72",
  "\u01A8\u01A9\x07k\u01A9\u01AA\x07o\u01AA",
  "\u01AB\x07r\u01AB\u01AC\x07q\u01AC\u01AD",
  "\x07t\u01AD\u01AE\x07v\u01AE4",
  "\u01AF\u01B0\x07k\u01B0\u01B1\x07p",
  "\u01B1\u01B2\x07u\u01B2\u01B3\x07v",
  "\u01B3\u01B4\x07c\u01B4\u01B5\x07p\u01B5",
  "\u01B6\x07e\u01B6\u01B7\x07g\u01B7\u01B8",
  "\x07q\u01B8\u01B9\x07h\u01B96",
  "\u01BA\u01BB\x07k\u01BB\u01BC\x07p",
  "\u01BC\u01BD\x07v\u01BD8",
  "\u01BE\u01BF\x07k\u01BF\u01C0\x07p\u01C0",
  "\u01C1\x07v\u01C1\u01C2\x07g\u01C2\u01C3",
  "\x07t\u01C3\u01C4\x07h\u01C4\u01C5\x07",
  "c\u01C5\u01C6\x07e\u01C6\u01C7\x07g",
  "\u01C7:\u01C8\u01C9\x07n",
  "\u01C9\u01CA\x07q\u01CA\u01CB\x07p\u01CB",
  "\u01CC\x07i\u01CC<\u01CD\u01CE",
  "\x07p\u01CE\u01CF\x07c\u01CF\u01D0\x07",
  "v\u01D0\u01D1\x07k\u01D1\u01D2\x07x",
  "\u01D2\u01D3\x07g\u01D3>",
  "\u01D4\u01D5\x07p\u01D5\u01D6\x07g\u01D6",
  "\u01D7\x07y\u01D7@\u01D8\u01D9",
  "\x07r\u01D9\u01DA\x07c\u01DA\u01DB\x07",
  "e\u01DB\u01DC\x07m\u01DC\u01DD\x07c",
  "\u01DD\u01DE\x07i\u01DE\u01DF\x07g",
  "\u01DFB\u01E0\u01E1\x07r\u01E1",
  "\u01E2\x07t\u01E2\u01E3\x07k\u01E3\u01E4",
  "\x07x\u01E4\u01E5\x07c\u01E5\u01E6\x07",
  "v\u01E6\u01E7\x07g\u01E7D",
  "\u01E8\u01E9\x07r\u01E9\u01EA\x07t",
  "\u01EA\u01EB\x07q\u01EB\u01EC\x07v\u01EC",
  "\u01ED\x07g\u01ED\u01EE\x07e\u01EE\u01EF",
  "\x07v\u01EF\u01F0\x07g\u01F0\u01F1\x07",
  "f\u01F1F\u01F2\u01F3\x07r",
  "\u01F3\u01F4\x07w\u01F4\u01F5\x07d",
  "\u01F5\u01F6\x07n\u01F6\u01F7\x07k\u01F7",
  "\u01F8\x07e\u01F8H\u01F9\u01FA",
  "\x07t\u01FA\u01FB\x07g\u01FB\u01FC\x07",
  "v\u01FC\u01FD\x07w\u01FD\u01FE\x07t",
  "\u01FE\u01FF\x07p\u01FFJ",
  "\u0200\u0201\x07u\u0201\u0202\x07j\u0202",
  "\u0203\x07q\u0203\u0204\x07t\u0204\u0205",
  "\x07v\u0205L\u0206\u0207\x07",
  "u\u0207\u0208\x07v\u0208\u0209\x07c",
  "\u0209\u020A\x07v\u020A\u020B\x07k",
  "\u020B\u020C\x07e\u020CN\u020D",
  "\u020E\x07u\u020E\u020F\x07v\u020F\u0210",
  "\x07t\u0210\u0211\x07k\u0211\u0212\x07",
  "e\u0212\u0213\x07v\u0213\u0214\x07h",
  "\u0214\u0215\x07r\u0215P",
  "\u0216\u0217\x07u\u0217\u0218\x07w\u0218",
  "\u0219\x07r\u0219\u021A\x07g\u021A\u021B",
  "\x07t\u021BR\u021C\u021D\x07",
  "u\u021D\u021E\x07y\u021E\u021F\x07k",
  "\u021F\u0220\x07v\u0220\u0221\x07e",
  "\u0221\u0222\x07j\u0222T\u0223",
  "\u0224\x07u\u0224\u0225\x07{\u0225\u0226",
  "\x07p\u0226\u0227\x07e\u0227\u0228\x07",
  "j\u0228\u0229\x07t\u0229\u022A\x07q",
  "\u022A\u022B\x07p\u022B\u022C\x07k",
  "\u022C\u022D\x07|\u022D\u022E\x07g\u022E",
  "\u022F\x07f\u022FV\u0230\u0231",
  "\x07v\u0231\u0232\x07j\u0232\u0233\x07",
  "k\u0233\u0234\x07u\u0234X",
  "\u0235\u0236\x07v\u0236\u0237\x07j",
  "\u0237\u0238\x07t\u0238\u0239\x07q\u0239",
  "\u023A\x07y\u023AZ\u023B\u023C",
  "\x07v\u023C\u023D\x07j\u023D\u023E\x07",
  "t\u023E\u023F\x07q\u023F\u0240\x07y",
  "\u0240\u0241\x07u\u0241\\",
  "\u0242\u0243\x07v\u0243\u0244\x07t\u0244",
  "\u0245\x07c\u0245\u0246\x07p\u0246\u0247",
  "\x07u\u0247\u0248\x07k\u0248\u0249\x07",
  "g\u0249\u024A\x07p\u024A\u024B\x07v",
  "\u024B^\u024C\u024D\x07v",
  "\u024D\u024E\x07t\u024E\u024F\x07{\u024F",
  "`\u0250\u0251\x07x\u0251\u0252",
  "\x07q\u0252\u0253\x07k\u0253\u0254\x07",
  "f\u0254b\u0255\u0256\x07x",
  "\u0256\u0257\x07q\u0257\u0258\x07n",
  "\u0258\u0259\x07c\u0259\u025A\x07v\u025A",
  "\u025B\x07k\u025B\u025C\x07n\u025C\u025D",
  "\x07g\u025Dd\u025E\u025F\x07",
  "y\u025F\u0260\x07j\u0260\u0261\x07k",
  "\u0261\u0262\x07n\u0262\u0263\x07g",
  "\u0263f\u0264\u0265\x07o\u0265",
  "\u0266\x07q\u0266\u0267\x07f\u0267\u0268",
  "\x07w\u0268\u0269\x07n\u0269\u026A\x07",
  "g\u026Ah\u026B\u026C\x07q",
  "\u026C\u026D\x07r\u026D\u026E\x07g",
  "\u026E\u026F\x07p\u026Fj\u0270",
  "\u0271\x07t\u0271\u0272\x07g\u0272\u0273",
  "\x07s\u0273\u0274\x07w\u0274\u0275\x07",
  "k\u0275\u0276\x07t\u0276\u0277\x07g",
  "\u0277\u0278\x07u\u0278l",
  "\u0279\u027A\x07g\u027A\u027B\x07z\u027B",
  "\u027C\x07r\u027C\u027D\x07q\u027D\u027E",
  "\x07t\u027E\u027F\x07v\u027F\u0280\x07",
  "u\u0280n\u0281\u0282\x07q",
  "\u0282\u0283\x07r\u0283\u0284\x07g",
  "\u0284\u0285\x07p\u0285\u0286\x07u\u0286",
  "p\u0287\u0288\x07v\u0288\u0289",
  "\x07q\u0289r\u028A\u028B\x07",
  "w\u028B\u028C\x07u\u028C\u028D\x07g",
  "\u028D\u028E\x07u\u028Et",
  "\u028F\u0290\x07r\u0290\u0291\x07t\u0291",
  "\u0292\x07q\u0292\u0293\x07x\u0293\u0294",
  "\x07k\u0294\u0295\x07f\u0295\u0296\x07",
  "g\u0296\u0297\x07u\u0297v",
  "\u0298\u0299\x07y\u0299\u029A\x07k",
  "\u029A\u029B\x07v\u029B\u029C\x07j\u029C",
  "x\u029D\u029E\x07v\u029E\u029F",
  "\x07t\u029F\u02A0\x07c\u02A0\u02A1\x07",
  "p\u02A1\u02A2\x07u\u02A2\u02A3\x07k",
  "\u02A3\u02A4\x07v\u02A4\u02A5\x07k",
  "\u02A5\u02A6\x07x\u02A6\u02A7\x07g\u02A7",
  "z\u02A8\u02A9\x07x\u02A9\u02AA",
  "\x07c\u02AA\u02AB\x07t\u02AB|",
  "\u02AC\u02AD\x07{\u02AD\u02AE\x07k",
  "\u02AE\u02AF\x07g\u02AF\u02B0\x07n",
  "\u02B0\u02B1\x07f\u02B1~\u02B2",
  "\u02B3\x07t\u02B3\u02B4\x07g\u02B4\u02B5",
  "\x07e\u02B5\u02B6\x07q\u02B6\u02B7\x07",
  "t\u02B7\u02B8\x07f\u02B8\x80",
  "\u02B9\u02BA\x07u\u02BA\u02BB\x07g",
  "\u02BB\u02BC\x07c\u02BC\u02BD\x07n",
  "\u02BD\u02BE\x07g\u02BE\u02BF\x07f\u02BF",
  "\x82\u02C0\u02C1\x07r\u02C1",
  "\u02C2\x07g\u02C2\u02C3\x07t\u02C3\u02C4",
  "\x07o\u02C4\u02C5\x07k\u02C5\u02C6\x07",
  "v\u02C6\u02C7\x07u\u02C7\x84",
  "\u02C8\u02C9\x07p\u02C9\u02CA\x07q",
  "\u02CA\u02CB\x07p\u02CB\u02CC\x07/",
  "\u02CC\u02CD\x07u\u02CD\u02CE\x07g\u02CE",
  "\u02CF\x07c\u02CF\u02D0\x07n\u02D0\u02D1",
  "\x07g\u02D1\u02D2\x07f\u02D2\x86",
  "\u02D3\u02E1\x072\u02D4\u02DE	",
  "\u02D5\u02D7\u010B\x86\u02D6\u02D5",
  "\u02D6\u02D7\u02D7\u02DF",
  "\u02D8\u02DA\x07a\u02D9\u02D8",
  "\u02DA\u02DB\u02DB\u02D9",
  "\u02DB\u02DC\u02DC\u02DD",
  "\u02DD\u02DF\u010B\x86\u02DE\u02D6",
  "\u02DE\u02D9\u02DF\u02E1",
  "\u02E0\u02D3\u02E0\u02D4",
  "\u02E1\u02E3\u02E2\u02E4	",
  "\u02E3\u02E2\u02E3\u02E4",
  "\u02E4\x88\u02E5\u02E6\x072",
  "\u02E6\u02E7	\u02E7\u02EF	",
  "\u02E8\u02EA	\u02E9\u02E8",
  "\u02EA\u02ED\u02EB\u02E9",
  "\u02EB\u02EC\u02EC\u02EE",
  "\u02ED\u02EB\u02EE\u02F0	",
  "\u02EF\u02EB\u02EF\u02F0",
  "\u02F0\u02F2\u02F1\u02F3	",
  "\u02F2\u02F1\u02F2\u02F3",
  "\u02F3\x8A\u02F4\u02F8\x072",
  "\u02F5\u02F7\x07a\u02F6\u02F5",
  "\u02F7\u02FA\u02F8\u02F6",
  "\u02F8\u02F9\u02F9\u02FB",
  "\u02FA\u02F8\u02FB\u0303	\x07",
  "\u02FC\u02FE	\b\u02FD\u02FC",
  "\u02FE\u0301\u02FF\u02FD",
  "\u02FF\u0300\u0300\u0302",
  "\u0301\u02FF\u0302\u0304	\x07",
  "\u0303\u02FF\u0303\u0304",
  "\u0304\u0306\u0305\u0307	",
  "\u0306\u0305\u0306\u0307",
  "\u0307\x8C\u0308\u0309\x072",
  "\u0309\u030A		\u030A\u0312	\n\u030B\u030D",
  "	\v\u030C\u030B\u030D\u0310",
  "\u030E\u030C\u030E\u030F",
  "\u030F\u0311\u0310\u030E",
  "\u0311\u0313	\n\u0312\u030E",
  "\u0312\u0313\u0313\u0315",
  "\u0314\u0316	\u0315\u0314",
  "\u0315\u0316\u0316\x8E",
  "\u0317\u0318\u010B\x86\u0318\u031A\x07",
  "0\u0319\u031B\u010B\x86\u031A\u0319",
  "\u031A\u031B\u031B\u031F",
  "\u031C\u031D\x070\u031D\u031F",
  "\u010B\x86\u031E\u0317\u031E\u031C",
  "\u031F\u0321\u0320\u0322",
  "\u0103\x82\u0321\u0320\u0321\u0322",
  "\u0322\u0324\u0323\u0325	",
  "\f\u0324\u0323\u0324\u0325",
  "\u0325\u032F\u0326\u032C",
  "\u010B\x86\u0327\u0329\u0103\x82\u0328\u032A	",
  "\f\u0329\u0328\u0329\u032A",
  "\u032A\u032D\u032B\u032D	",
  "\f\u032C\u0327\u032C\u032B",
  "\u032D\u032F\u032E\u031E",
  "\u032E\u0326\u032F\x90",
  "\u0330\u0331\x072\u0331\u033B	",
  "\u0332\u0334\u0107\x84\u0333\u0335\x070",
  "\u0334\u0333\u0334\u0335",
  "\u0335\u033C\u0336\u0338\u0107",
  "\x84\u0337\u0336\u0337\u0338",
  "\u0338\u0339\u0339\u033A\x070",
  "\u033A\u033C\u0107\x84\u033B\u0332",
  "\u033B\u0337\u033C\u033D",
  "\u033D\u033F	\r\u033E\u0340	",
  "\u033F\u033E\u033F\u0340",
  "\u0340\u0341\u0341\u0343\u010B\x86",
  "\u0342\u0344	\f\u0343\u0342\u0343",
  "\u0344\u0344\x92\u0345",
  "\u0346\x07v\u0346\u0347\x07t\u0347\u0348",
  "\x07w\u0348\u034F\x07g\u0349\u034A\x07",
  "h\u034A\u034B\x07c\u034B\u034C\x07n",
  "\u034C\u034D\x07u\u034D\u034F\x07g",
  "\u034E\u0345\u034E\u0349",
  "\u034F\x94\u0350\u0353\x07)",
  "\u0351\u0354\n\u0352\u0354\u0105\x83",
  "\u0353\u0351\u0353\u0352",
  "\u0354\u0355\u0355\u0356\x07)",
  "\u0356\x96\u0357\u035C\x07$",
  "\u0358\u035B\n\u0359\u035B\u0105\x83",
  "\u035A\u0358\u035A\u0359",
  "\u035B\u035E\u035C\u035A",
  "\u035C\u035D\u035D\u035F",
  "\u035E\u035C\u035F\u0360\x07$",
  "\u0360\x98\u0361\u0362\x07$",
  "\u0362\u0363\x07$\u0363\u0364\x07$\u0364",
  "\u0368\u0365\u0367	\u0366",
  "\u0365\u0367\u036A\u0368",
  "\u0366\u0368\u0369\u0369",
  "\u036B\u036A\u0368\u036B",
  "\u0370	\u036C\u036F\v\u036D",
  "\u036F\u0105\x83\u036E\u036C\u036E",
  "\u036D\u036F\u0372\u0370",
  "\u0371\u0370\u036E\u0371",
  "\u0373\u0372\u0370\u0373",
  "\u0374\x07$\u0374\u0375\x07$\u0375\u0376",
  "\x07$\u0376\x9A\u0377\u0378",
  "\x07p\u0378\u0379\x07w\u0379\u037A\x07",
  "n\u037A\u037B\x07n\u037B\x9C",
  "\u037C\u037D\x07*\u037D\x9E",
  "\u037E\u037F\x07+\u037F\xA0",
  "\u0380\u0381\x07}\u0381\xA2",
  "\u0382\u0383\x07\x7F\u0383\xA4",
  "\u0384\u0385\x07]\u0385\xA6",
  "\u0386\u0387\x07_\u0387\xA8",
  "\u0388\u0389\x07=\u0389\xAA",
  "\u038A\u038B\x07.\u038B\xAC",
  "\u038C\u038D\x070\u038D\xAE",
  "\u038E\u038F\x07?\u038F\xB0",
  "\u0390\u0391\x07@\u0391\xB2",
  "\u0392\u0393\x07>\u0393\xB4",
  "\u0394\u0395\x07#\u0395\xB6",
  "\u0396\u0397\x07\x80\u0397\xB8",
  "\u0398\u0399\x07A\u0399\xBA",
  "\u039A\u039B\x07<\u039B\xBC",
  "\u039C\u039D\x07?\u039D\u039E\x07?",
  "\u039E\xBE\u039F\u03A0\x07>",
  "\u03A0\u03A1\x07?\u03A1\xC0",
  "\u03A2\u03A3\x07@\u03A3\u03A4\x07?",
  "\u03A4\xC2\u03A5\u03A6\x07#",
  "\u03A6\u03A7\x07?\u03A7\xC4",
  "\u03A8\u03A9\x07(\u03A9\u03AA\x07(\u03AA",
  "\xC6\u03AB\u03AC\x07~\u03AC",
  "\u03AD\x07~\u03AD\xC8\u03AE",
  "\u03AF\x07-\u03AF\u03B0\x07-\u03B0\xCA",
  "\u03B1\u03B2\x07/\u03B2\u03B3",
  "\x07/\u03B3\xCC\u03B4\u03B5",
  "\x07-\u03B5\xCE\u03B6\u03B7",
  "\x07/\u03B7\xD0\u03B8\u03B9",
  "\x07,\u03B9\xD2\u03BA\u03BB",
  "\x071\u03BB\xD4\u03BC\u03BD",
  "\x07(\u03BD\xD6\u03BE\u03BF",
  "\x07~\u03BF\xD8\u03C0\u03C1",
  "\x07`\u03C1\xDA\u03C2\u03C3",
  "\x07'\u03C3\xDC\u03C4\u03C5",
  "\x07-\u03C5\u03C6\x07?\u03C6\xDE",
  "\u03C7\u03C8\x07/\u03C8\u03C9\x07",
  "?\u03C9\xE0\u03CA\u03CB\x07",
  ",\u03CB\u03CC\x07?\u03CC\xE2",
  "\u03CD\u03CE\x071\u03CE\u03CF\x07?",
  "\u03CF\xE4\u03D0\u03D1\x07(",
  "\u03D1\u03D2\x07?\u03D2\xE6",
  "\u03D3\u03D4\x07~\u03D4\u03D5\x07?",
  "\u03D5\xE8\u03D6\u03D7\x07`",
  "\u03D7\u03D8\x07?\u03D8\xEA",
  "\u03D9\u03DA\x07'\u03DA\u03DB\x07?\u03DB",
  "\xEC\u03DC\u03DD\x07>\u03DD",
  "\u03DE\x07>\u03DE\u03DF\x07?\u03DF\xEE",
  "\u03E0\u03E1\x07@\u03E1\u03E2",
  "\x07@\u03E2\u03E3\x07?\u03E3\xF0",
  "\u03E4\u03E5\x07@\u03E5\u03E6\x07",
  "@\u03E6\u03E7\x07@\u03E7\u03E8\x07?",
  "\u03E8\xF2\u03E9\u03EA\x07/",
  "\u03EA\u03EB\x07@\u03EB\xF4",
  "\u03EC\u03ED\x07<\u03ED\u03EE\x07<",
  "\u03EE\xF6\u03EF\u03F0\x07B",
  "\u03F0\xF8\u03F1\u03F2\x070",
  "\u03F2\u03F3\x070\u03F3\u03F4\x070\u03F4",
  "\xFA\u03F5\u03F7	\u03F6",
  "\u03F5\u03F7\u03F8\u03F8",
  "\u03F6\u03F8\u03F9\u03F9",
  "\u03FA\u03FA\u03FB\b~\u03FB\xFC",
  "\u03FC\u03FD\x071\u03FD\u03FE",
  "\x07,\u03FE\u0402\u03FF\u0401",
  "\v\u0400\u03FF\u0401\u0404",
  "\u0402\u0403\u0402\u0400",
  "\u0403\u0405\u0404\u0402",
  "\u0405\u0406\x07,\u0406\u0407",
  "\x071\u0407\u0408\u0408\u0409",
  "\b\x7F\u0409\xFE\u040A\u040B",
  "\x071\u040B\u040C\x071\u040C\u0410",
  "\u040D\u040F\n\u040E\u040D",
  "\u040F\u0412\u0410\u040E",
  "\u0410\u0411\u0411\u0413",
  "\u0412\u0410\u0413\u0414\b",
  "\x80\u0414\u0100\u0415\u0419",
  "\u010F\x88\u0416\u0418\u010D\x87\u0417\u0416",
  "\u0418\u041B\u0419\u0417",
  "\u0419\u041A\u041A\u0102",
  "\u041B\u0419\u041C\u041E	",
  "\u041D\u041F	\u041E\u041D",
  "\u041E\u041F\u041F\u0420",
  "\u0420\u0421\u010B\x86\u0421\u0104",
  "\u0422\u0423\x07^\u0423\u0438	",
  "\u0424\u0429\x07^\u0425\u0427	",
  "\u0426\u0425\u0426\u0427",
  "\u0427\u0428\u0428\u042A	\x07",
  "\u0429\u0426\u0429\u042A",
  "\u042A\u042B\u042B\u0438	\x07",
  "\u042C\u042E\x07^\u042D\u042F\x07w",
  "\u042E\u042D\u042F\u0430",
  "\u0430\u042E\u0430\u0431",
  "\u0431\u0432\u0432\u0433\u0109\x85",
  "\u0433\u0434\u0109\x85\u0434\u0435\u0109\x85",
  "\u0435\u0436\u0109\x85\u0436\u0438",
  "\u0437\u0422\u0437\u0424",
  "\u0437\u042C\u0438\u0106",
  "\u0439\u0442\u0109\x85\u043A\u043D\u0109\x85",
  "\u043B\u043D\x07a\u043C\u043A",
  "\u043C\u043B\u043D\u0440",
  "\u043E\u043C\u043E\u043F",
  "\u043F\u0441\u0440\u043E",
  "\u0441\u0443\u0109\x85\u0442\u043E",
  "\u0442\u0443\u0443\u0108",
  "\u0444\u0445	\u0445\u010A",
  "\u0446\u044E	\u0447\u0449	\u0448",
  "\u0447\u0449\u044C\u044A",
  "\u0448\u044A\u044B\u044B",
  "\u044D\u044C\u044A\u044D",
  "\u044F	\u044E\u044A\u044E",
  "\u044F\u044F\u010C\u0450",
  "\u0453\u010F\x88\u0451\u0453	\u0452",
  "\u0450\u0452\u0451\u0453",
  "\u010E\u0454\u0459	\u0455",
  "\u0459\n\u0456\u0457	\x1B\u0457\u0459",
  "	\u0458\u0454\u0458\u0455",
  "\u0458\u0456\u0459\u0110",
  "5\u02D6\u02DB\u02DE\u02E0\u02E3\u02EB",
  "\u02EF\u02F2\u02F8\u02FF\u0303\u0306\u030E\u0312\u0315\u031A\u031E\u0321",
  "\u0324\u0329\u032C\u032E\u0334\u0337\u033B\u033F\u0343\u034E\u0353\u035A",
  "\u035C\u0368\u036E\u0370\u03F8\u0402\u0410\u0419\u041E\u0426\u0429\u0430",
  "\u0437\u043C\u043E\u0442\u044A\u044E\u0452\u0458"
].join("");
const atn = new import_antlr4.default.atn.ATNDeserializer().deserialize(serializedATN);
const decisionsToDFA = atn.decisionToState.map((ds, index) => new import_antlr4.default.dfa.DFA(ds, index));
class JavaLexer extends import_antlr4.default.Lexer {
  static grammarFileName = "JavaLexer.g4";
  static channelNames = ["DEFAULT_TOKEN_CHANNEL", "HIDDEN"];
  static modeNames = ["DEFAULT_MODE"];
  static literalNames = [
    null,
    "'abstract'",
    "'assert'",
    "'boolean'",
    "'break'",
    "'byte'",
    "'case'",
    "'catch'",
    "'char'",
    "'class'",
    "'const'",
    "'continue'",
    "'default'",
    "'do'",
    "'double'",
    "'else'",
    "'enum'",
    "'extends'",
    "'final'",
    "'finally'",
    "'float'",
    "'for'",
    "'if'",
    "'goto'",
    "'implements'",
    "'import'",
    "'instanceof'",
    "'int'",
    "'interface'",
    "'long'",
    "'native'",
    "'new'",
    "'package'",
    "'private'",
    "'protected'",
    "'public'",
    "'return'",
    "'short'",
    "'static'",
    "'strictfp'",
    "'super'",
    "'switch'",
    "'synchronized'",
    "'this'",
    "'throw'",
    "'throws'",
    "'transient'",
    "'try'",
    "'void'",
    "'volatile'",
    "'while'",
    "'module'",
    "'open'",
    "'requires'",
    "'exports'",
    "'opens'",
    "'to'",
    "'uses'",
    "'provides'",
    "'with'",
    "'transitive'",
    "'var'",
    "'yield'",
    "'record'",
    "'sealed'",
    "'permits'",
    "'non-sealed'",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "'null'",
    "'('",
    "')'",
    "'{'",
    "'}'",
    "'['",
    "']'",
    "';'",
    "','",
    "'.'",
    "'='",
    "'>'",
    "'<'",
    "'!'",
    "'~'",
    "'?'",
    "':'",
    "'=='",
    "'<='",
    "'>='",
    "'!='",
    "'&&'",
    "'||'",
    "'++'",
    "'--'",
    "'+'",
    "'-'",
    "'*'",
    "'/'",
    "'&'",
    "'|'",
    "'^'",
    "'%'",
    "'+='",
    "'-='",
    "'*='",
    "'/='",
    "'&='",
    "'|='",
    "'^='",
    "'%='",
    "'<<='",
    "'>>='",
    "'>>>='",
    "'->'",
    "'::'",
    "'@'",
    "'...'"
  ];
  static symbolicNames = [
    null,
    "ABSTRACT",
    "ASSERT",
    "BOOLEAN",
    "BREAK",
    "BYTE",
    "CASE",
    "CATCH",
    "CHAR",
    "CLASS",
    "CONST",
    "CONTINUE",
    "DEFAULT",
    "DO",
    "DOUBLE",
    "ELSE",
    "ENUM",
    "EXTENDS",
    "FINAL",
    "FINALLY",
    "FLOAT",
    "FOR",
    "IF",
    "GOTO",
    "IMPLEMENTS",
    "IMPORT",
    "INSTANCEOF",
    "INT",
    "INTERFACE",
    "LONG",
    "NATIVE",
    "NEW",
    "PACKAGE",
    "PRIVATE",
    "PROTECTED",
    "PUBLIC",
    "RETURN",
    "SHORT",
    "STATIC",
    "STRICTFP",
    "SUPER",
    "SWITCH",
    "SYNCHRONIZED",
    "THIS",
    "THROW",
    "THROWS",
    "TRANSIENT",
    "TRY",
    "VOID",
    "VOLATILE",
    "WHILE",
    "MODULE",
    "OPEN",
    "REQUIRES",
    "EXPORTS",
    "OPENS",
    "TO",
    "USES",
    "PROVIDES",
    "WITH",
    "TRANSITIVE",
    "VAR",
    "YIELD",
    "RECORD",
    "SEALED",
    "PERMITS",
    "NON_SEALED",
    "DECIMAL_LITERAL",
    "HEX_LITERAL",
    "OCT_LITERAL",
    "BINARY_LITERAL",
    "FLOAT_LITERAL",
    "HEX_FLOAT_LITERAL",
    "BOOL_LITERAL",
    "CHAR_LITERAL",
    "STRING_LITERAL",
    "TEXT_BLOCK",
    "NULL_LITERAL",
    "LPAREN",
    "RPAREN",
    "LBRACE",
    "RBRACE",
    "LBRACK",
    "RBRACK",
    "SEMI",
    "COMMA",
    "DOT",
    "ASSIGN",
    "GT",
    "LT",
    "BANG",
    "TILDE",
    "QUESTION",
    "COLON",
    "EQUAL",
    "LE",
    "GE",
    "NOTEQUAL",
    "AND",
    "OR",
    "INC",
    "DEC",
    "ADD",
    "SUB",
    "MUL",
    "DIV",
    "BITAND",
    "BITOR",
    "CARET",
    "MOD",
    "ADD_ASSIGN",
    "SUB_ASSIGN",
    "MUL_ASSIGN",
    "DIV_ASSIGN",
    "AND_ASSIGN",
    "OR_ASSIGN",
    "XOR_ASSIGN",
    "MOD_ASSIGN",
    "LSHIFT_ASSIGN",
    "RSHIFT_ASSIGN",
    "URSHIFT_ASSIGN",
    "ARROW",
    "COLONCOLON",
    "AT",
    "ELLIPSIS",
    "WS",
    "COMMENT",
    "LINE_COMMENT",
    "IDENTIFIER"
  ];
  static ruleNames = [
    "ABSTRACT",
    "ASSERT",
    "BOOLEAN",
    "BREAK",
    "BYTE",
    "CASE",
    "CATCH",
    "CHAR",
    "CLASS",
    "CONST",
    "CONTINUE",
    "DEFAULT",
    "DO",
    "DOUBLE",
    "ELSE",
    "ENUM",
    "EXTENDS",
    "FINAL",
    "FINALLY",
    "FLOAT",
    "FOR",
    "IF",
    "GOTO",
    "IMPLEMENTS",
    "IMPORT",
    "INSTANCEOF",
    "INT",
    "INTERFACE",
    "LONG",
    "NATIVE",
    "NEW",
    "PACKAGE",
    "PRIVATE",
    "PROTECTED",
    "PUBLIC",
    "RETURN",
    "SHORT",
    "STATIC",
    "STRICTFP",
    "SUPER",
    "SWITCH",
    "SYNCHRONIZED",
    "THIS",
    "THROW",
    "THROWS",
    "TRANSIENT",
    "TRY",
    "VOID",
    "VOLATILE",
    "WHILE",
    "MODULE",
    "OPEN",
    "REQUIRES",
    "EXPORTS",
    "OPENS",
    "TO",
    "USES",
    "PROVIDES",
    "WITH",
    "TRANSITIVE",
    "VAR",
    "YIELD",
    "RECORD",
    "SEALED",
    "PERMITS",
    "NON_SEALED",
    "DECIMAL_LITERAL",
    "HEX_LITERAL",
    "OCT_LITERAL",
    "BINARY_LITERAL",
    "FLOAT_LITERAL",
    "HEX_FLOAT_LITERAL",
    "BOOL_LITERAL",
    "CHAR_LITERAL",
    "STRING_LITERAL",
    "TEXT_BLOCK",
    "NULL_LITERAL",
    "LPAREN",
    "RPAREN",
    "LBRACE",
    "RBRACE",
    "LBRACK",
    "RBRACK",
    "SEMI",
    "COMMA",
    "DOT",
    "ASSIGN",
    "GT",
    "LT",
    "BANG",
    "TILDE",
    "QUESTION",
    "COLON",
    "EQUAL",
    "LE",
    "GE",
    "NOTEQUAL",
    "AND",
    "OR",
    "INC",
    "DEC",
    "ADD",
    "SUB",
    "MUL",
    "DIV",
    "BITAND",
    "BITOR",
    "CARET",
    "MOD",
    "ADD_ASSIGN",
    "SUB_ASSIGN",
    "MUL_ASSIGN",
    "DIV_ASSIGN",
    "AND_ASSIGN",
    "OR_ASSIGN",
    "XOR_ASSIGN",
    "MOD_ASSIGN",
    "LSHIFT_ASSIGN",
    "RSHIFT_ASSIGN",
    "URSHIFT_ASSIGN",
    "ARROW",
    "COLONCOLON",
    "AT",
    "ELLIPSIS",
    "WS",
    "COMMENT",
    "LINE_COMMENT",
    "IDENTIFIER",
    "ExponentPart",
    "EscapeSequence",
    "HexDigits",
    "HexDigit",
    "Digits",
    "LetterOrDigit",
    "Letter"
  ];
  constructor(input) {
    super(input);
    this._interp = new import_antlr4.default.atn.LexerATNSimulator(this, atn, decisionsToDFA, new import_antlr4.default.PredictionContextCache());
  }
  get atn() {
    return atn;
  }
}
JavaLexer.EOF = import_antlr4.default.Token.EOF;
JavaLexer.ABSTRACT = 1;
JavaLexer.ASSERT = 2;
JavaLexer.BOOLEAN = 3;
JavaLexer.BREAK = 4;
JavaLexer.BYTE = 5;
JavaLexer.CASE = 6;
JavaLexer.CATCH = 7;
JavaLexer.CHAR = 8;
JavaLexer.CLASS = 9;
JavaLexer.CONST = 10;
JavaLexer.CONTINUE = 11;
JavaLexer.DEFAULT = 12;
JavaLexer.DO = 13;
JavaLexer.DOUBLE = 14;
JavaLexer.ELSE = 15;
JavaLexer.ENUM = 16;
JavaLexer.EXTENDS = 17;
JavaLexer.FINAL = 18;
JavaLexer.FINALLY = 19;
JavaLexer.FLOAT = 20;
JavaLexer.FOR = 21;
JavaLexer.IF = 22;
JavaLexer.GOTO = 23;
JavaLexer.IMPLEMENTS = 24;
JavaLexer.IMPORT = 25;
JavaLexer.INSTANCEOF = 26;
JavaLexer.INT = 27;
JavaLexer.INTERFACE = 28;
JavaLexer.LONG = 29;
JavaLexer.NATIVE = 30;
JavaLexer.NEW = 31;
JavaLexer.PACKAGE = 32;
JavaLexer.PRIVATE = 33;
JavaLexer.PROTECTED = 34;
JavaLexer.PUBLIC = 35;
JavaLexer.RETURN = 36;
JavaLexer.SHORT = 37;
JavaLexer.STATIC = 38;
JavaLexer.STRICTFP = 39;
JavaLexer.SUPER = 40;
JavaLexer.SWITCH = 41;
JavaLexer.SYNCHRONIZED = 42;
JavaLexer.THIS = 43;
JavaLexer.THROW = 44;
JavaLexer.THROWS = 45;
JavaLexer.TRANSIENT = 46;
JavaLexer.TRY = 47;
JavaLexer.VOID = 48;
JavaLexer.VOLATILE = 49;
JavaLexer.WHILE = 50;
JavaLexer.MODULE = 51;
JavaLexer.OPEN = 52;
JavaLexer.REQUIRES = 53;
JavaLexer.EXPORTS = 54;
JavaLexer.OPENS = 55;
JavaLexer.TO = 56;
JavaLexer.USES = 57;
JavaLexer.PROVIDES = 58;
JavaLexer.WITH = 59;
JavaLexer.TRANSITIVE = 60;
JavaLexer.VAR = 61;
JavaLexer.YIELD = 62;
JavaLexer.RECORD = 63;
JavaLexer.SEALED = 64;
JavaLexer.PERMITS = 65;
JavaLexer.NON_SEALED = 66;
JavaLexer.DECIMAL_LITERAL = 67;
JavaLexer.HEX_LITERAL = 68;
JavaLexer.OCT_LITERAL = 69;
JavaLexer.BINARY_LITERAL = 70;
JavaLexer.FLOAT_LITERAL = 71;
JavaLexer.HEX_FLOAT_LITERAL = 72;
JavaLexer.BOOL_LITERAL = 73;
JavaLexer.CHAR_LITERAL = 74;
JavaLexer.STRING_LITERAL = 75;
JavaLexer.TEXT_BLOCK = 76;
JavaLexer.NULL_LITERAL = 77;
JavaLexer.LPAREN = 78;
JavaLexer.RPAREN = 79;
JavaLexer.LBRACE = 80;
JavaLexer.RBRACE = 81;
JavaLexer.LBRACK = 82;
JavaLexer.RBRACK = 83;
JavaLexer.SEMI = 84;
JavaLexer.COMMA = 85;
JavaLexer.DOT = 86;
JavaLexer.ASSIGN = 87;
JavaLexer.GT = 88;
JavaLexer.LT = 89;
JavaLexer.BANG = 90;
JavaLexer.TILDE = 91;
JavaLexer.QUESTION = 92;
JavaLexer.COLON = 93;
JavaLexer.EQUAL = 94;
JavaLexer.LE = 95;
JavaLexer.GE = 96;
JavaLexer.NOTEQUAL = 97;
JavaLexer.AND = 98;
JavaLexer.OR = 99;
JavaLexer.INC = 100;
JavaLexer.DEC = 101;
JavaLexer.ADD = 102;
JavaLexer.SUB = 103;
JavaLexer.MUL = 104;
JavaLexer.DIV = 105;
JavaLexer.BITAND = 106;
JavaLexer.BITOR = 107;
JavaLexer.CARET = 108;
JavaLexer.MOD = 109;
JavaLexer.ADD_ASSIGN = 110;
JavaLexer.SUB_ASSIGN = 111;
JavaLexer.MUL_ASSIGN = 112;
JavaLexer.DIV_ASSIGN = 113;
JavaLexer.AND_ASSIGN = 114;
JavaLexer.OR_ASSIGN = 115;
JavaLexer.XOR_ASSIGN = 116;
JavaLexer.MOD_ASSIGN = 117;
JavaLexer.LSHIFT_ASSIGN = 118;
JavaLexer.RSHIFT_ASSIGN = 119;
JavaLexer.URSHIFT_ASSIGN = 120;
JavaLexer.ARROW = 121;
JavaLexer.COLONCOLON = 122;
JavaLexer.AT = 123;
JavaLexer.ELLIPSIS = 124;
JavaLexer.WS = 125;
JavaLexer.COMMENT = 126;
JavaLexer.LINE_COMMENT = 127;
JavaLexer.IDENTIFIER = 128;
module.exports = __toCommonJS(JavaLexer_exports);
